@import url('https://fonts.googleapis.com/css?family=Muli&display=swap');

*{
    box-sizing: border-box;
}
//This means that the total width and height of an element will include the padding and border, instead of just the content.
// This can be useful for making sure that your elements are the correct size, even when they have padding or borders.

body{
    display: flex;//The `display: flex` property is used to create a flex container. A flex container is a block-level element that can be used to arrange its child elements in a flexible way.
    flex-direction: column ; //`flex-direction: column` is a CSS property that specifies the direction of the flex items in a flex container. By default, flex items are arranged in a row.
    justify-content: center; //When `justify-content` is set to `center`, the items in the flex container will be centered along the main axis. For example, if you have a flex container with two items, they will be centered both horizontally and vertically.
    align-items: center;//When `align-items` is set to `center`, the flex items will be aligned to the center of the cross axis. For example, if you have a flex container with two flex items, they will both be aligned to the center of the container.
    padding: 30px 0;//Sure, `padding: 30px 0` sets the padding of an element to 30 pixels on the top and bottom, and 0 pixels on the left and right.
    min-height: 100vh;//The `vh` unit stands for "viewport height", so this property will set the minimum height of the element to be equal to the height of the viewport.
}

img{
     max-width: 100%;// The `%` unit stands for "percentage", so this property will set the maximum width of the element to be equal to the width of its parent element. */
}

p {
	margin-bottom: 5px;//The `px` unit stands for "pixels", so this property will set the bottom margin of the element to be 5 pixels.
}

h3{
    margin: 0;

}

h5{
    margin: 10px 0;
}

li{
    margin-bottom:0;
}

.meal{

    margin:20px 0;
}
.text-center {
	text-align: center;
}

.videoWrapper {
	position: relative;
	padding-bottom: 56.25%;
	padding-top: 25px;
	height: 0;
}

.videoWrapper iframe {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}